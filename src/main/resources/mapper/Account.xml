<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pungmul.pungmul.repository.member.mapper.AccountMapper">

    <!-- Account ResultMap -->
    <resultMap id="AccountResultMap" type="pungmul.pungmul.domain.member.account.Account">
        <id property="id" column="id" />
        <result property="loginId" column="login_id" />
        <result property="password" column="password" />
        <result property="withdraw" column="withdraw" />
        <result property="lastPasswordChanged" column="last_password_changed" />
        <result property="enabled" column="enabled" />
        <result property="accountExpired" column="account_expired" />
        <result property="accountLocked" column="account_locked" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
    </resultMap>

    <!-- Insert Account -->
    <insert id="saveAccount" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO account (login_id, password)
        VALUES (#{loginId}, #{password})
    </insert>

    <!-- Update Password -->
    <update id="updatePassword" parameterType="map">
        UPDATE account
        SET password = #{password}
        WHERE id = #{accountId}
    </update>

    <!-- Select Account By Id (삭제된 계정 제외) -->
    <select id="getAccountByAccountId" resultMap="AccountResultMap">
        SELECT * FROM account
        WHERE id = #{id}
          AND withdraw = FALSE
    </select>

    <!-- Email로 Account 조회 (삭제된 계정 제외) -->
    <select id="getAccountByEmail" parameterType="java.lang.String" resultType="pungmul.pungmul.domain.member.account.Account">
        SELECT *
        FROM account
        WHERE login_id = #{email}
          AND withdraw = FALSE;
    </select>

    <!-- Login ID로 Account 조회 (삭제된 계정 제외) -->
    <select id="getAccountByLoginId" parameterType="java.lang.String" resultType="pungmul.pungmul.domain.member.account.Account">
        SELECT *
        FROM account
        WHERE login_id = #{loginId}
          AND withdraw = FALSE;
    </select>

    <!-- Login ID로 Account 조회 (로그인 용으로 삭제 여부 무시) -->
    <select id="getAccountByLoginIdForLogin" parameterType="java.lang.String" resultType="pungmul.pungmul.domain.member.account.Account">
        SELECT *
        FROM account
        WHERE login_id = #{loginId}
    </select>

    <!-- Enable Account -->
    <update id="setEnabledAccount" parameterType="java.lang.Long">
        UPDATE account
        SET enabled = true
        WHERE id = #{accountId}
    </update>

    <!-- Soft Delete Account (삭제 상태 설정) -->
    <update id="deleteAccount" parameterType="java.lang.String">
        UPDATE account
        SET withdraw = TRUE
        WHERE login_id = #{loginId}
    </update>

</mapper>
