<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pungmul.pungmul.repository.post.mapper.PostMapper">

    <!-- ResultMap for Post -->
    <resultMap id="PostResultMap" type="pungmul.pungmul.domain.post.Post">
        <id property="id" column="id" />
        <result property="categoryId" column="category_id" />
        <result property="viewCount" column="view_count" />
        <result property="likeNum" column="like_num" />
        <result property="deleted" column="deleted" />
        <result property="hidden" column="hidden" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
    </resultMap>

<!--    <select id="getPostListByCategory" resultType="pungmul.pungmul.domain.post.Post">-->
<!--        SELECT * FROM post p-->
<!--            INNER JOIN category c-->
<!--                ON p.category_id = c.id-->
<!--        WHERE c.id = #{categoryId}-->
<!--    </select>-->

    <select id="getPostListByCategory" parameterType="map" resultType="pungmul.pungmul.domain.post.Post">
        SELECT * FROM post p
        INNER JOIN category c ON p.category_id = c.id
        WHERE c.id = #{categoryId}
        <if test="isAdmin == false">
            AND p.hidden = false
        </if>
    </select>

    <!-- Select the Hot Post (Most liked post within the last 24 hours) -->
    <select id="getHotPost" resultMap="PostResultMap">
        SELECT *
        FROM post p
        WHERE p.category_id = (
            SELECT id FROM category WHERE id = #{categoryId}
        )
          AND p.created_at >= NOW() - INTERVAL 1 DAY
        ORDER BY p.like_num DESC
            LIMIT 1
    </select>

    <!-- Insert Post -->
    <insert id="save" parameterType="pungmul.pungmul.domain.post.Post" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO post (category_id)
        VALUES (#{categoryId})
    </insert>


    <!-- Insert like record -->
    <insert id="likePost" parameterType="map">
        INSERT INTO post_likes (post_id, user_id)
        VALUES (#{postId}, #{userId})
            ON DUPLICATE KEY UPDATE created_at = CURRENT_TIMESTAMP
    </insert>

    <delete id="unlikePost" parameterType="map">
        DELETE FROM post_likes
        WHERE post_id = #{postId}
          AND user_id = #{userId}
    </delete>

    <!-- Update like count for a post -->
    <update id="plusPostLikeCount" parameterType="java.lang.Long">
        UPDATE post
        SET like_num = like_num + 1
        WHERE id = #{postId}
    </update>

    <update id="minusPostLikeNum" parameterType="java.lang.Long">
        UPDATE post
        SET like_num = like_num - 1
        WHERE id = #{postId}
    </update>

    <select id="getPostById" parameterType="java.lang.Long">
        SELECT * FROM post
        WHERE id = #{postId}
    </select>

    <select id="postLikedNum" parameterType="java.lang.Long">
        SELECT like_num
        FROM post
        WHERE id = #{postId}
    </select>

    <select id="isPostLikedByUser" parameterType="map" resultType="boolean">
        SELECT CASE WHEN COUNT(*) > 0 THEN true ELSE false END
        FROM post_likes
        WHERE post_id = #{postId}
          AND user_id = #{userId}
    </select>

    <update id="hidePost" parameterType="long">
        UPDATE post
        SET hidden = TRUE
        WHERE id = #{postId};
    </update>

    <select id="getHotPosts" resultMap="PostResultMap">
        SELECT *
        FROM post p
        WHERE p.created_at >= NOW() - INTERVAL 1 DAY
        AND p.like_num >= #{thresholdLikes}  <!-- 추천 개수 조건 추가 -->
        ORDER BY p.like_num DESC
    </select>


    <select id="getPostsByUserId" parameterType="java.lang.Long" resultMap="PostResultMap">
        SELECT p.*
        FROM post p
                 INNER JOIN content c ON p.id = c.post_id
        WHERE c.writer_id = #{userId}
        ORDER BY p.created_at DESC
    </select>

    <select id="getHiddenPosts" resultMap="PostResultMap">
        SELECT *
        FROM post
        WHERE hidden = true
    </select>

</mapper>
